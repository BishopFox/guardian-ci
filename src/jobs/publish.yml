description: >
  Publish a docker and github release for the repo
  In most Dockerfiles, this assumes a binary is built and in the dist directory

executor: default

working_directory: ~/repo

parameters:
  candidate:
    description: "publish candidate image"
    default: true
    type: boolean
  release_name:
    description: "the name to be used for the docker and github releases"
    type: string
  docker:
    description: "whether or not to publish docker containers"
    default: true
    type: boolean

steps:
  - checkout
  - attach_workspace:
      at: ~/repo
  - run:
      name: Copy Changelog
      command: |
        if [[ -f CHANGELOG.md ]]; then
          cp CHANGELOG.md dist/CHANGELOG.md
        fi
  - when:
      condition: <<parameters.docker>>
      steps:
        - setup_remote_docker
        - run:
            name: Publish to Docker
            environment:
              CANDIDATE: <<# parameters.candidate >>1<</ parameters.candidate >>
              RELEASE_NAME: << parameters.release_name >>
            command: <<include(scripts/publish-docker.sh)>>
  - run:
      name: Install release dependencies
      command: |
        go get github.com/mitchellh/gox
        go get github.com/tcnksm/ghr
  - when:
      condition: <<parameters.candidate>>
      steps:
        - run:
            name: Create candidate github release
            command: |
              VERSION=$(cat VERSION)
              ghr -t $GITHUB_TOKEN \
                -u BishopFox \
                -r << parameters.release_name >> \
                -c $CIRCLE_SHA1 \
                --replace "v$VERSION-$CIRCLE_SHA1" \
                ./dist
  - unless:
      condition: <<parameters.candidate>>
      steps:
        - run:
            name: Create github release
            command: |
              VERSION=$(cat VERSION)
              ghr -t $GITHUB_TOKEN \
                -u BishopFox \
                -r << parameters.release_name >> \
                -c $CIRCLE_SHA1 \
                --delete "v$VERSION" \
                ./dist
  - store_artifacts:
      path: ~/repo/dist
